Выгоднее в плане производительности преобразовать и изменять данные на серверах БД, нежели в клиентском приложении.

Вычисляемые поля позволяют изменять формат данных (строчные/ прописные буквы),
вычислять числовые данные (суммировать, находить среднее арифметическое),
объединять данные нескольких полей в одно и т.д.

- Конкатенация полей:
"Конкатенация полей" - это процесс комбинирования (присоединением друг к другу) полей для получения одного поля.

"Какой знак осуществляет конкатенацию?"
В MS Access и SQL Server используем +;
В DB2, Oracle,PostgreSQL, SQLite и OpnOffice Base используем ||;
MySQL и MariaDB используют специальную функцию Concat.

Синтаксис (Для большинства БД):
SELECT vend_name + ' (' + vend_country + ') '
FROM Vendors
ORDER BY vend_name;
# Bear Emporium (USA)

Синтаксис с использованием ||:
SELECT vend_name || ' (' || vend_country || ') '
FROM Vendors
ORDER BY vend_name;
# Bear Emporium (USA)
# Или же Bear Emporium                (USA                )

"Дополнение пробелами и функции TRIM":
Если БД дополняет поля пробелами (как это делает PostgreSQL), стоит использовать функции отсечения пробелов.

Пример:
SELECT RTRIM(vend_name) || ' (' || RTRIM (vend_country) || ') ' # Теперь точно получим Bear Emporium (USA)

Функции TRIM() отбрасывают все пробелы, обрезая строку слева и справа;
RTRIM() - отрезает пробелы справа;
LTRIM() - отрезает пробелы слева.

- Псевдонимы. AS
Если используем конкатенацию получим столбец без названия.
А к столбцу без названия в клиентском приложении обратиться будет невозможно.

Поэтому лучшим решением является использование псевдонима для вычисляемого поля.

"Синтаксис:"
SELECT RTRIM(vend_name) || ' (' || RTRIM (vend_country) || ') ' AS vend_title

Кючевое слово AS часто является НЕОБЯЗАТЕЛЬНЫМ, но его применение - общепринятая практика.

AS задаётся сразу же после SELECT. Правильный синтаксис выглядит так:
SELECT AVG (Radius) AS AverageRadius FROM Planets

"Имена псевдонимов:"
Не стоит использовать имена из нескольких слов. 
Технически это возможно с помощью скобок: AS 'Average Radius', но
лучше не стоит этого делать - это может создать уйму проблем для клиентского приложения.

Кстати, "Псевдонимы" = "Производные столбцы".

- Математические вычисления
Один из способов использования вычисляемых полей - выполнение математических функций.

Пример:
SELECT prod_id, quantity, item_price,
quantity * item_price AS Expanden_Price # Добавит новое поле, данные для него будут получены при выполнении умножения
FROM OrderItems
WHERE order_num = 20008;

"Математические операторы":
В SQL поддерживаются базовые математические операторы (Сложение/ Вычитание/ Умножение/ Деление).