/* Задача: Вычислить сумму чисел до данного. Важность: 5.

Напишите функцию sumTo(n), которая вычисляет сумму чисел 1 + 2 + ... + n.
Сделайте три варианта решения:

С использованием цикла.
Через рекурсию, т.к. sumTo(n) = n + sumTo(n-1) for n > 1.
С использованием формулы арифметической прогрессии.
*/

let n = +prompt("Введите количество итераций","1");

console.log ("Результат цикла: " + sumTo_1(n));
console.log ("Результат рекурсии: " + sumTo_2(n));
console.log ("Результат арифметической прогрессии: " + sumTo_3(n));

alert ("Done! Pls check a console.")


function sumTo_1(n) {
    let sum = 0;
    for (let i = 0; i <= n; i++ ) {
        sum += i;
    }
    return sum;
}

function sumTo_2(n, sum) {
    if (n==1) return 1;
    return n + sumTo_2(n-1);
}

function sumTo_3(n, sum) {
    return n*(n+1)/2; 
}

/* V8 поддерживает до 9659 запусков вложенной функции.
На 9660-ом выдаётся ошибка "Maximum call stack size exceeded" */

/* Быстрее всего отрабатывает функция - она использует всего 3 операции для любого значения n.
А вот цикл и рекурсия требуют минимум n операций сложения, для решения поставленной задачи.

Цикл - второй по скорости. Он быстрее, так как нет дополнительных вычислительных затрат на правильную организацию вложенных вызовов.
*/

